version: '3.8'

services:
  rhiza-api-test:
    build: ./rhiza-api
    ports:
      - "8000:8000"
    environment:
      - NEO4J_URI=bolt://neo4j-test:7687
      - NEO4J_PASSWORD=password
      - GEMINI_API_KEY=${GEMINI_API_KEY:-}
      - AWS_BEARER_TOKEN_BEDROCK=${AWS_BEARER_TOKEN_BEDROCK:-}
      - ALLOWED_ORIGINS=*
    depends_on:
      neo4j-test:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  rhiza-ui-test:
    build: ./rhiza-ui
    ports:
      - "5173:8080"
    depends_on:
      - rhiza-api-test
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080"]
      interval: 10s
      timeout: 5s
      retries: 3

  neo4j-test:
    image: neo4j:5.15-community
    ports:
      - "7474:7474"
      - "7687:7687"
    environment:
      NEO4J_AUTH: neo4j/password
      NEO4J_PLUGINS: '["apoc"]'
    healthcheck:
      test: ["CMD", "cypher-shell", "-u", "neo4j", "-p", "password", "RETURN 1"]
      interval: 10s
      timeout: 5s
      retries: 10
    volumes:
      - ./data/cypher/complete_enriched_seed.cypher:/docker-entrypoint-initdb.d/init.cypher:ro

  test-runner:
    image: curlimages/curl:latest
    depends_on:
      rhiza-api-test:
        condition: service_healthy
      rhiza-ui-test:
        condition: service_healthy
    environment:
      - API_BASE_URL=http://rhiza-api-test:8000
      - UI_BASE_URL=http://rhiza-ui-test:8080
      - NEO4J_URL=http://neo4j-test:7474
    volumes:
      - ./test.sh:/test.sh:ro
    command: ["/bin/sh", "/test.sh"]
