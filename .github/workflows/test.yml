name: Rhiza Test Suite

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      neo4j:
        image: neo4j:5.15-community
        env:
          NEO4J_AUTH: neo4j/password
          NEO4J_PLUGINS: '["apoc"]'
        ports:
          - 7474:7474
          - 7687:7687
        options: >-
          --health-cmd "cypher-shell -u neo4j -p password 'RETURN 1'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y curl jq bc

    - name: Build API container
      run: |
        docker build -t rhiza-api ./rhiza-api

    - name: Build UI container  
      run: |
        docker build -t rhiza-ui ./rhiza-ui

    - name: Start API container
      run: |
        docker run -d --name rhiza-api \
          --network host \
          -e NEO4J_URI=bolt://localhost:7687 \
          -e NEO4J_PASSWORD=password \
          -e GEMINI_API_KEY=${{ secrets.GEMINI_API_KEY }} \
          -e AWS_BEARER_TOKEN_BEDROCK=${{ secrets.AWS_BEARER_TOKEN_BEDROCK }} \
          -e ALLOWED_ORIGINS="*" \
          rhiza-api

    - name: Start UI container
      run: |
        docker run -d --name rhiza-ui \
          --network host \
          rhiza-ui

    - name: Load test data
      run: |
        sleep 10
        cat data/cypher/complete_enriched_seed.cypher | docker exec -i $(docker ps -q --filter ancestor=neo4j:5.15-community) cypher-shell -u neo4j -p password

    - name: Wait for services
      run: |
        timeout 60 bash -c 'until curl -f http://localhost:8000/health; do sleep 2; done'
        timeout 60 bash -c 'until curl -f http://localhost:5173; do sleep 2; done'

    - name: Run test suite
      run: |
        export API_BASE_URL=http://localhost:8000
        export UI_BASE_URL=http://localhost:5173
        export NEO4J_URL=http://localhost:7474
        ./test.sh --ci

    - name: Collect logs on failure
      if: failure()
      run: |
        echo "=== API Logs ==="
        docker logs rhiza-api
        echo "=== UI Logs ==="
        docker logs rhiza-ui
        echo "=== Neo4j Logs ==="
        docker logs $(docker ps -q --filter ancestor=neo4j:5.15-community)

    - name: Cleanup
      if: always()
      run: |
        docker stop rhiza-api rhiza-ui || true
        docker rm rhiza-api rhiza-ui || true
